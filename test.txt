(set-logic HO_ALL)
(define-fun max ((x Int) (y Int)) Int (ite (< x y) y x)) ; max(x,y)
(define-fun minus ((x Int) (y Int)) Int (ite (< x y) 0 (- x y))) ; minus(x,y); PROVE ((a + b) + c) = (a + (b + c))
(push 1)
(declare-const a Int)
(assert (<= 0 a))
(declare-const b Int)
(assert (<= 0 b))
(declare-const c Int)
(assert (<= 0 c))
; assert the negation of the constraint to check if it is valid
(assert (not (= (+ (+ a b) c) (+ a (+ b c)))))
(check-sat)
(check-sat)
